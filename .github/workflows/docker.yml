name: FitPet_A CI/CD

on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: develop

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '17'

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y openjdk-17-jdk

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew clean build -x test

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build, Push and Run Docker container
      env:
        SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      run: |
        IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/fitpet-a:latest
        
        # Build Docker image
        echo "Building Docker image $IMAGE_NAME..."
        docker build -t $IMAGE_NAME .

        # Push Docker image to Docker Hub
        echo "Pushing Docker image to Docker Hub..."
        docker push $IMAGE_NAME

        # Stop and Remove existing Docker container
        echo "Stopping and removing existing Docker container fitpet-container (if exists)..."
        sudo docker stop fitpet-container || true
        docker rm fitpet-container || true

        # Run new Docker container
        echo "Starting new Docker container fitpet-container..."
        docker run -d -p 80:80 --name fitpet-container \
          -e SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL} \
          -e DB_USERNAME=${DB_USERNAME} \
          -e DB_PASSWORD=${DB_PASSWORD} \
          $IMAGE_NAME

        echo "Pruning unused Docker objects to free up space..."
        docker system prune -a --volumes -f
